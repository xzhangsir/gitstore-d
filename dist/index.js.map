{
  "version": 3,
  "sources": ["../src/index.js"],
  "sourcesContent": ["import fs from 'fs'\r\nexport default function gitD(src, opts) {\r\n  return new GitD(src, opts)\r\n}\r\n\r\nclass GitD {\r\n  constructor(src, opts) {\r\n    this.src = src\r\n  }\r\n  clone(dir) {\r\n    // \u67E5\u770B\u76EE\u5F55\u662F\u4E0D\u662F\u7A7A\u7684\r\n    console.log(dir)\r\n    this._checkDirIsEmpty(dir)\r\n\r\n    // console.log('clone')\r\n  }\r\n  _checkDirIsEmpty(dir) {\r\n    console.log(dir)\r\n    fs.readdir(dir, function (err, files) {\r\n      console.log(files)\r\n    })\r\n\r\n    return\r\n    try {\r\n      console.log(dir)\r\n      const files = fs.readdirSync(dir)\r\n      console.log(files)\r\n      return\r\n      if (files.length > 0) {\r\n        if (this.force) {\r\n          this._info({\r\n            code: 'DEST_NOT_EMPTY',\r\n            message: `destination directory is not empty. Using options.force, continuing`\r\n          })\r\n        } else {\r\n          throw new DegitError(\r\n            `destination directory is not empty, aborting. Use options.force to override`,\r\n            {\r\n              code: 'DEST_NOT_EMPTY'\r\n            }\r\n          )\r\n        }\r\n      } else {\r\n        this._verbose({\r\n          code: 'DEST_IS_EMPTY',\r\n          message: `destination directory is empty`\r\n        })\r\n      }\r\n    } catch (err) {\r\n      if (err.code !== 'ENOENT') throw err\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACA,SAAR,KAAsB,KAAK,MAAM;AACtC,SAAO,IAAI,KAAK,KAAK,IAAI;AAC3B;AAEA,IAAM,OAAN,MAAW;AAAA,EACT,YAAY,KAAK,MAAM;AACrB,SAAK,MAAM;AAAA,EACb;AAAA,EACA,MAAM,KAAK;AAET,YAAQ,IAAI,GAAG;AACf,SAAK,iBAAiB,GAAG;AAAA,EAG3B;AAAA,EACA,iBAAiB,KAAK;AACpB,YAAQ,IAAI,GAAG;AACf,cAAAA,QAAG,QAAQ,KAAK,SAAU,KAAK,OAAO;AACpC,cAAQ,IAAI,KAAK;AAAA,IACnB,CAAC;AAED;AACA,QAAI;AACF,cAAQ,IAAI,GAAG;AACf,YAAM,QAAQ,UAAAA,QAAG,YAAY,GAAG;AAChC,cAAQ,IAAI,KAAK;AACjB;AACA,UAAI,MAAM,SAAS,GAAG;AACpB,YAAI,KAAK,OAAO;AACd,eAAK,MAAM;AAAA,YACT,MAAM;AAAA,YACN,SAAS;AAAA,UACX,CAAC;AAAA,QACH,OAAO;AACL,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,cACE,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF,OAAO;AACL,aAAK,SAAS;AAAA,UACZ,MAAM;AAAA,UACN,SAAS;AAAA,QACX,CAAC;AAAA,MACH;AAAA,IACF,SAAS,KAAP;AACA,UAAI,IAAI,SAAS;AAAU,cAAM;AAAA,IACnC;AAAA,EACF;AACF;",
  "names": ["fs"]
}
