{
  "version": 3,
  "sources": ["../src/index.js", "../src/utils.js"],
  "sourcesContent": ["import fs from 'fs'\r\nimport path from 'path'\r\nimport https from 'https'\r\nimport { mkdirp, base, exec } from './utils'\r\n\r\nmodule.exports = function gitD(src, opts) {\r\n  return new GitD(src, opts)\r\n}\r\n// export default function gitD(src, opts) {\r\n//   return new GitD(src, opts)\r\n// }\r\n\r\nclass GitD {\r\n  constructor(src, opts = {}) {\r\n    this.src = src\r\n    this.proxy = process.env.https_proxy\r\n    this.force = opts.force || false\r\n    this.repo = normalize(src)\r\n    // this.mode = opts.mode || this.repo.mode\r\n  }\r\n  async clone(dest) {\r\n    // console.log(this.repo)\r\n    try {\r\n      // \u67E5\u770B\u76EE\u5F55\u662F\u4E0D\u662F\u7A7A\u7684\r\n      this._checkDirIsEmpty(dest)\r\n      await this._cloneWithGit(dest)\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n  async download(dest) {\r\n    console.log(this.repo)\r\n    try {\r\n      // \u67E5\u770B\u76EE\u5F55\u662F\u4E0D\u662F\u7A7A\u7684\r\n      this._checkDirIsEmpty(dest)\r\n      await this._cloneWithTar(dest)\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n  async _checkDirIsEmpty(dir) {\r\n    try {\r\n      const files = fs.readdirSync(dir)\r\n      if (files.length > 0) {\r\n        if (this.force) {\r\n          await exec(`rm -rf ${dir}`)\r\n        } else {\r\n          // throw new Error('\u76EE\u6807\u76EE\u5F55\u4E0D\u4E3A\u7A7A')\r\n          throw '\u76EE\u6807\u76EE\u5F55\u4E0D\u4E3A\u7A7A'\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (err.code !== 'ENOENT') throw err\r\n    }\r\n  }\r\n  async _cloneWithGit(dest) {\r\n    await exec(`git clone --depth 1 ${this.repo.url} ${dest}`)\r\n    // await exec(`git clone https://gitee.com/zxwaa/feisen.git ${dest}`)\r\n    await exec(`rm -rf ${dest + '/.git*'}`)\r\n  }\r\n  async _cloneWithTar(dest) {\r\n    // \u4E0B\u8F7D\r\n    let { domain, user, name } = this.repo\r\n\r\n    // console.log(dest)\r\n    // let url = `https://${domain}/${user}/${name.replace(\r\n    //   '.git',\r\n    //   ''\r\n    // )}repository/archive/master.zip`\r\n    let url = `https://github.com/xzhangsir/vue2-core-study/archive/refs/heads/main.zip`\r\n    // let url = `https://gitee.com/zxwaa/feisen/repository/archive/master.zip`\r\n    console.log(url)\r\n    await fetch(url, dest)\r\n  }\r\n}\r\n\r\nconst supported = new Set([\r\n  'github',\r\n  'gitee',\r\n  'gitlab',\r\n  'bitbucket',\r\n  'git.sr.ht'\r\n])\r\n\r\n// \u6784\u9020\u4E0B\u8F7D\u5BF9\u8C61\r\nfunction normalize(store) {\r\n  let regex =\r\n    /^(?:(github|gitee|gitlab|bitbucket):)?(?:(.+):)?([^/]+)\\/([^#]+)(?:#(.+))?$/\r\n  let match = regex.exec(store)\r\n  let type = (match[1] || 'github').replace(/\\.(com|org)$/, '')\r\n  let domain = match[2] || null\r\n  let user = match[3]\r\n  let name = match[4]\r\n  let branch = match[5] || 'main'\r\n\r\n  if (domain === null) {\r\n    domain = `${type}.${type === 'bitbucket' ? 'org' : 'com'}`\r\n  }\r\n  let url = `https://${domain}/${user}/${name}`\r\n  return { type, domain, user, name, branch, url }\r\n}\r\n\r\nfunction fetch(url, dest) {\r\n  return new Promise((fulfil, reject) => {\r\n    let options = url\r\n\r\n    // if (proxy) {\r\n    //   const parsedUrl = URL.parse(url)\r\n    //   options = {\r\n    //     hostname: parsedUrl.host,\r\n    //     path: parsedUrl.path,\r\n    //     agent: new Agent(proxy)\r\n    //   }\r\n    // }\r\n\r\n    https\r\n      .get(options, (response) => {\r\n        const code = response.statusCode\r\n        if (code >= 400) {\r\n          reject({ code, message: response.statusMessage })\r\n        } else if (code >= 300) {\r\n          fetch(response.headers.location, dest).then(fulfil, reject)\r\n        } else {\r\n          response\r\n            .pipe(fs.createWriteStream(dest + '.zip'))\r\n            .on('finish', () => fulfil())\r\n            .on('error', reject)\r\n        }\r\n      })\r\n      .on('error', reject)\r\n  })\r\n}\r\n", "import fs from 'fs'\r\nimport path from 'path'\r\nimport { homedir, tmpdir } from 'os'\r\nimport child_process from 'child_process'\r\nexport const base = path.join(homedir() || tmpdir())\r\n\r\nexport function mkdirp(dir) {\r\n  const parent = path.dirname(dir)\r\n  if (parent === dir) return\r\n\r\n  mkdirp(parent)\r\n\r\n  try {\r\n    fs.mkdirSync(dir)\r\n  } catch (err) {\r\n    if (err.code !== 'EEXIST') throw err\r\n  }\r\n}\r\n\r\nexport function exec(command) {\r\n  return new Promise((resolve, reject) => {\r\n    child_process.exec(command, (err, stdout, stderr) => {\r\n      if (err) {\r\n        reject(err)\r\n        return\r\n      }\r\n      resolve({ stdout, stderr })\r\n    })\r\n  })\r\n}\r\n"],
  "mappings": "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",
  "names": ["path", "child_process", "fs", "https", "fs"]
}
